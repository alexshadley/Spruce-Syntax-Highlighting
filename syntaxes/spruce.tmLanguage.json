{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Spruce",
	"patterns": [
		{
			"include": "#imports"
		},
		{
			"include": "#types"
		},
		{
			"include": "#interops"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		}
	],
	"repository": {
		"imports": {
			"patterns": [{
				"name": "meta.import",
				"match": "(import)( )*(([A-Za-z0-9_/])*)",
				"captures": {
					"1": { "name": "keyword.other.spruce" },
					"3": { "name": "variable.other.spruce" }
				}
			}]
		},
		"types": {
			"patterns": [{
				"name": "meta.type",
				"match": "(type)( )*([A-Z]([A-Za-z0-9])*)",
				"captures": {
					"1": { "name": "keyword.other.spruce" },
					"3": { "name": "entity.name.type.spruce" }
				}
			}]
		},
		"interops": {
			"patterns": [{
				"name": "meta.interop",
				"begin": "^(interop)( )*([A-Za-z_]([A-Za-z0-9_\\.])*)\\(",
				"end": "$",
				"beginCaptures": {
					"1": { "name": "keyword.other.spruce" },
					"3": { "name": "entity.name.function.spruce" }
				},
				"patterns": [{
					"name": "meta.argument",
					"match": "([a-z][A-Za-z]*)(:[^,]*)?,?",
					"captures": {
						"1": { "name": "variable.parameter.spruce"}
					}
				}]
			}]
		},
		"functions": {
			"patterns": [{
				"name": "meta.function",
				"begin": "^([a-z]([A-Za-z0-9])*)\\(",
				"end": "$",
				"beginCaptures": {
					"1": { "name": "entity.name.function.spruce" }
				},
				"patterns": [{
					"name": "meta.argument",
					"match": "([a-z][A-Za-z]*)(:[^,]*)?,?",
					"captures": {
						"1": { "name": "variable.parameter.spruce"}
					}
				}]
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.spruce",
				"match": "case"
			},
			{
				"name": "keyword.operator.spruce",
				"match": "\\+|\\-|\\*|\\\\|==|!=|\\<=|\\>=|\\<|\\>|\\%|\\^|\\-\\>"
			}]
		},
		"identifiers": {
			"patterns": [{
				"name": "meta.identifier.spruce",
				"match": "(([a-z][A-Za-z0-9]*)|([A-Z][A-Za-z0-9]*))",
				"captures": {
					"2": { "name": "variable.other.spruce" },
					"3": { "name": "constant.type-constructor.spruce" }
				}
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.untitled",
				"begin": "\"",
				"end": "\"",
				"patterns": [{
					"name": "constant.character.escape.untitled",
					"match": "\\."
				}]
			}]
		},
		"constants": {
			"patterns": [{
				"name": "constant.numeric.spruce",
				"match": "[1-9]([0-9])*|0"
			}]
		}
	},
	"scopeName": "source.sp"
}